{"ast":null,"code":"var _jsxFileName = \"D:\\\\Pdotnet\\\\JestDemo\\\\login-jest\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [emailerror, setEmailError] = useState();\n  const [passworderror, setPasswordError] = useState();\n  const [loginData, setLoginData] = useState({\n    email: '',\n    password: ''\n  });\n  const handleChange = e => {\n    setLoginData({\n      ...loginData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleLoginSubmit = e => {\n    e.preventDefault();\n    if (loginData.email == null && loginData.password) {\n      setEmailError(\"Fields cannot be empty\");\n    } else if (loginData.email == '') {\n      setEmailError(\"Email cannot be empty\");\n    } else if (loginData.password == '') {\n      setPasswordError(\"Password cannot be empty\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"chk\",\n        \"aria-hidden\": \"true\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), emailerror && /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"email_error\",\n        className: \"error\",\n        children: emailerror\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 24\n      }, this), passworderror && /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"password_error\",\n        className: \"error\",\n        children: passworderror\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLoginSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: loginData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: loginData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"plDr5H2JZJAR6QTnKOyhAhJi5So=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","jsxDEV","_jsxDEV","App","_s","emailerror","setEmailError","passworderror","setPasswordError","loginData","setLoginData","email","password","handleChange","e","target","name","value","handleLoginSubmit","preventDefault","className","children","for","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["D:/Pdotnet/JestDemo/login-jest/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [emailerror,setEmailError] =useState();\n  const [passworderror,setPasswordError] =useState();\n  const [loginData, setLoginData] = useState({ email: '', password: '' });\n\n  const handleChange = (e) => {\n    setLoginData({ ...loginData, [e.target.name]: e.target.value })\n  };\n\n  const handleLoginSubmit = (e) => {\n    e.preventDefault();\n    if (loginData.email == null && loginData.password )\n    {\n      setEmailError(\"Fields cannot be empty\")\n    }\n    else if (loginData.email == '')\n    {\n      setEmailError(\"Email cannot be empty\")\n    }\n    else if (loginData.password == '')\n    {\n      setPasswordError(\"Password cannot be empty\")\n    }\n\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"login\">\n      <label for=\"chk\" aria-hidden=\"true\">Login</label>\n        {emailerror && <p data-testid=\"email_error\" className='error'>{emailerror}</p>}\n        {passworderror && <p data-testid = \"password_error\" className='error'>{passworderror}</p>}\n        <form onSubmit={handleLoginSubmit}>\n          \n          <input type=\"email\" name=\"email\" placeholder=\"Email\" value={loginData.email} onChange={handleChange}/>\n          <input type=\"password\" name=\"password\" placeholder=\"Password\" value={loginData.password} onChange={handleChange}/>\n          <button type=\"submit\">Login</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}